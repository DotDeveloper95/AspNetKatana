@{/*

build 
    Executes msbuild or xbuild to compile your project or solution

projectFile='' 
    Required. Path to the project or solution file to build.

configuration='Release'
    Determines which configuration to use when building.

outputDir=''
    Directs all compiler outputs into the target path.

extra=''
    Additional commandline parameters for msbuild or xbuild

*/}

default configuration='Release'
default outputDir=''
default extra=''

use import="Environment"
use assembly="Microsoft.Build.Utilities.v4.0, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
use namespace="Microsoft.Build.Utilities"

var buildProgram=''
@{
  var vsPath = Environment.GetEnvironmentVariable("MSBuildTools15.0_x86_Path");
  if (!string.IsNullOrEmpty(vsPath))
  {
    buildProgram = Path.Combine(vsPath, "msbuild.exe");
  }
  else
  {
    buildProgram = ToolLocationHelper.GetPathToDotNetFrameworkFile("msbuild.exe",TargetDotNetFrameworkVersion.Version40);
  }
}
log info="Build"
log info="  configuration: ${configuration}"
log info="  outputDir: ${outputDir}"
log info="  extra: ${extra}"
log info="  vsPath: ${vsPath}"

var OutDirProperty=''
set OutDirProperty='OutDir=${outputDir}${Path.DirectorySeparatorChar};' if='!string.IsNullOrWhiteSpace(outputDir)'

exec program="${buildProgram}" commandline='${projectFile} "/p:${OutDirProperty}Configuration=${configuration}" ${extra}'